syntax = "proto3";

package bigbrain;


message AIModelIO {
    enum IOType {
        OTHER = 0;
        IMAGE = 1;
        TEXT = 2;
        AUDIO = 3;
        GRAPH = 4;
        VECTOR = 5;
        MATRIX = 6;
        BBOX = 7;
    }
    IOType type = 1;
    string name = 2;
}

message AIModelFramework {
    enum ModelFramework {
        OTHER = 0;
        TENSORFLOW = 1;
        PYTORCH = 2;
    }
    ModelFramework framework = 1;
    string version = 2;
}

message AICapability {
    AIModelInformation information = 1;
    AIModelContainer container = 2;
}

// holds information about the model
message AIModelInformation {
    // name of the model, not uid
    string name = 1;
    // description of the model
    string description = 2;
    // path (unique)
    string path = 3;
    // how the model was created
    AIModelFramework framework = 4;
    // inputs for inference
    repeated AIModelIO inputs = 5;
    // outputs for inference
    repeated AIModelIO outputs = 6;
    // set to true if mode updateable
    bool updateable = 7;
    // inputs for update
    repeated AIModelIO update_inputs = 8;
    // outputs for update
    repeated AIModelIO update_outputs = 9;
}

// holds the model weights and state
message AIModelContainer {
    // hash of the total structure
    string hash = 1;
    // hash of the model
    string hash_model = 2;
    // hash of the state
    string hash_state = 3;
    // timestamp of creation
    string timestamp = 4;
    // model data 
    bytes model = 5;
    // state data (if no state keep empty)
    bytes state = 6;
    // for the future
    bytes other = 7;
}

service AIService {
    rpc ReportCapabilities (AICapabilityRequest) returns (AIResponse) {}
    rpc RegisterCapability (AICapability) returns (AIResponse) {}
}

message AICapabilityRequest{

};

message AIModelsInformation{
    repeated AIModelInformation model_information = 1;
};

message AIResponse{
    bool success = 1;
    string error = 2;
    oneof result {
        AICapability model = 3;
        AIModelsInformation models_information = 4;
    }
};






