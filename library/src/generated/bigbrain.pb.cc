// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bigbrain.proto

#include "bigbrain.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bigbrain_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bigbrain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AIModelContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bigbrain_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AIModelInformation;
}  // namespace protobuf_bigbrain_2eproto
namespace bigbrain {
class AICapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AICapability>
      _instance;
} _AICapability_default_instance_;
class AIModelInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AIModelInformation>
      _instance;
} _AIModelInformation_default_instance_;
class AIModelContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AIModelContainer>
      _instance;
} _AIModelContainer_default_instance_;
class AICapabilityRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AICapabilityRequest>
      _instance;
} _AICapabilityRequest_default_instance_;
class AICapabilityResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AICapabilityResponse>
      _instance;
} _AICapabilityResponse_default_instance_;
}  // namespace bigbrain
namespace protobuf_bigbrain_2eproto {
static void InitDefaultsAICapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigbrain::_AICapability_default_instance_;
    new (ptr) ::bigbrain::AICapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigbrain::AICapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AICapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAICapability}, {
      &protobuf_bigbrain_2eproto::scc_info_AIModelInformation.base,
      &protobuf_bigbrain_2eproto::scc_info_AIModelContainer.base,}};

static void InitDefaultsAIModelInformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigbrain::_AIModelInformation_default_instance_;
    new (ptr) ::bigbrain::AIModelInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigbrain::AIModelInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AIModelInformation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAIModelInformation}, {}};

static void InitDefaultsAIModelContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigbrain::_AIModelContainer_default_instance_;
    new (ptr) ::bigbrain::AIModelContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigbrain::AIModelContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AIModelContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAIModelContainer}, {}};

static void InitDefaultsAICapabilityRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigbrain::_AICapabilityRequest_default_instance_;
    new (ptr) ::bigbrain::AICapabilityRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigbrain::AICapabilityRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AICapabilityRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAICapabilityRequest}, {}};

static void InitDefaultsAICapabilityResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bigbrain::_AICapabilityResponse_default_instance_;
    new (ptr) ::bigbrain::AICapabilityResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bigbrain::AICapabilityResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AICapabilityResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAICapabilityResponse}, {
      &protobuf_bigbrain_2eproto::scc_info_AIModelInformation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AICapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AIModelInformation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AIModelContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AICapabilityRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AICapabilityResponse.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapability, information_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapability, container_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, updateable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, update_inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelInformation, update_outputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, hash_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, hash_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AIModelContainer, other_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bigbrain::AICapabilityResponse, models_information_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bigbrain::AICapability)},
  { 7, -1, sizeof(::bigbrain::AIModelInformation)},
  { 20, -1, sizeof(::bigbrain::AIModelContainer)},
  { 32, -1, sizeof(::bigbrain::AICapabilityRequest)},
  { 37, -1, sizeof(::bigbrain::AICapabilityResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigbrain::_AICapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigbrain::_AIModelInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigbrain::_AIModelContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigbrain::_AICapabilityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bigbrain::_AICapabilityResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bigbrain.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016bigbrain.proto\022\010bigbrain\"p\n\014AICapabili"
      "ty\0221\n\013information\030\001 \001(\0132\034.bigbrain.AIMod"
      "elInformation\022-\n\tcontainer\030\002 \001(\0132\032.bigbr"
      "ain.AIModelContainer\"\361\001\n\022AIModelInformat"
      "ion\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\014"
      "\n\004path\030\003 \001(\t\022 \n\006inputs\030\004 \003(\0162\020.bigbrain."
      "IOType\022!\n\007outputs\030\005 \003(\0162\020.bigbrain.IOTyp"
      "e\022\022\n\nupdateable\030\006 \001(\010\022\'\n\rupdate_inputs\030\007"
      " \003(\0162\020.bigbrain.IOType\022(\n\016update_outputs"
      "\030\010 \003(\0162\020.bigbrain.IOType\"\210\001\n\020AIModelCont"
      "ainer\022\014\n\004hash\030\001 \001(\t\022\022\n\nhash_model\030\002 \001(\t\022"
      "\022\n\nhash_state\030\003 \001(\t\022\021\n\ttimestamp\030\004 \001(\t\022\r"
      "\n\005model\030\005 \001(\014\022\r\n\005state\030\006 \001(\014\022\r\n\005other\030\007 "
      "\001(\014\"\025\n\023AICapabilityRequest\"P\n\024AICapabili"
      "tyResponse\0228\n\022models_information\030\001 \003(\0132\034"
      ".bigbrain.AIModelInformation*`\n\006IOType\022\t"
      "\n\005OTHER\020\000\022\t\n\005IMAGE\020\001\022\010\n\004TEXT\020\002\022\t\n\005AUDIO\020"
      "\003\022\t\n\005GRAPH\020\004\022\n\n\006VECTOR\020\005\022\n\n\006MATRIX\020\006\022\010\n\004"
      "BBOX\020\0072b\n\tAIService\022U\n\022ReportCapabilitie"
      "s\022\035.bigbrain.AICapabilityRequest\032\036.bigbr"
      "ain.AICapabilityResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bigbrain.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bigbrain_2eproto
namespace bigbrain {
const ::google::protobuf::EnumDescriptor* IOType_descriptor() {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bigbrain_2eproto::file_level_enum_descriptors[0];
}
bool IOType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AICapability::InitAsDefaultInstance() {
  ::bigbrain::_AICapability_default_instance_._instance.get_mutable()->information_ = const_cast< ::bigbrain::AIModelInformation*>(
      ::bigbrain::AIModelInformation::internal_default_instance());
  ::bigbrain::_AICapability_default_instance_._instance.get_mutable()->container_ = const_cast< ::bigbrain::AIModelContainer*>(
      ::bigbrain::AIModelContainer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AICapability::kInformationFieldNumber;
const int AICapability::kContainerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AICapability::AICapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bigbrain_2eproto::scc_info_AICapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigbrain.AICapability)
}
AICapability::AICapability(const AICapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_information()) {
    information_ = new ::bigbrain::AIModelInformation(*from.information_);
  } else {
    information_ = NULL;
  }
  if (from.has_container()) {
    container_ = new ::bigbrain::AIModelContainer(*from.container_);
  } else {
    container_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bigbrain.AICapability)
}

void AICapability::SharedCtor() {
  ::memset(&information_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&container_) -
      reinterpret_cast<char*>(&information_)) + sizeof(container_));
}

AICapability::~AICapability() {
  // @@protoc_insertion_point(destructor:bigbrain.AICapability)
  SharedDtor();
}

void AICapability::SharedDtor() {
  if (this != internal_default_instance()) delete information_;
  if (this != internal_default_instance()) delete container_;
}

void AICapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AICapability::descriptor() {
  ::protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AICapability& AICapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bigbrain_2eproto::scc_info_AICapability.base);
  return *internal_default_instance();
}


void AICapability::Clear() {
// @@protoc_insertion_point(message_clear_start:bigbrain.AICapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && information_ != NULL) {
    delete information_;
  }
  information_ = NULL;
  if (GetArenaNoVirtual() == NULL && container_ != NULL) {
    delete container_;
  }
  container_ = NULL;
  _internal_metadata_.Clear();
}

bool AICapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigbrain.AICapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bigbrain.AIModelInformation information = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bigbrain.AIModelContainer container = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigbrain.AICapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigbrain.AICapability)
  return false;
#undef DO_
}

void AICapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigbrain.AICapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bigbrain.AIModelInformation information = 1;
  if (this->has_information()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_information(), output);
  }

  // .bigbrain.AIModelContainer container = 2;
  if (this->has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_container(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bigbrain.AICapability)
}

::google::protobuf::uint8* AICapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bigbrain.AICapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bigbrain.AIModelInformation information = 1;
  if (this->has_information()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_information(), deterministic, target);
  }

  // .bigbrain.AIModelContainer container = 2;
  if (this->has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_container(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigbrain.AICapability)
  return target;
}

size_t AICapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigbrain.AICapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bigbrain.AIModelInformation information = 1;
  if (this->has_information()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *information_);
  }

  // .bigbrain.AIModelContainer container = 2;
  if (this->has_container()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *container_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AICapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigbrain.AICapability)
  GOOGLE_DCHECK_NE(&from, this);
  const AICapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AICapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigbrain.AICapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigbrain.AICapability)
    MergeFrom(*source);
  }
}

void AICapability::MergeFrom(const AICapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigbrain.AICapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_information()) {
    mutable_information()->::bigbrain::AIModelInformation::MergeFrom(from.information());
  }
  if (from.has_container()) {
    mutable_container()->::bigbrain::AIModelContainer::MergeFrom(from.container());
  }
}

void AICapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigbrain.AICapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AICapability::CopyFrom(const AICapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigbrain.AICapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AICapability::IsInitialized() const {
  return true;
}

void AICapability::Swap(AICapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AICapability::InternalSwap(AICapability* other) {
  using std::swap;
  swap(information_, other->information_);
  swap(container_, other->container_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AICapability::GetMetadata() const {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AIModelInformation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AIModelInformation::kNameFieldNumber;
const int AIModelInformation::kDescriptionFieldNumber;
const int AIModelInformation::kPathFieldNumber;
const int AIModelInformation::kInputsFieldNumber;
const int AIModelInformation::kOutputsFieldNumber;
const int AIModelInformation::kUpdateableFieldNumber;
const int AIModelInformation::kUpdateInputsFieldNumber;
const int AIModelInformation::kUpdateOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AIModelInformation::AIModelInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bigbrain_2eproto::scc_info_AIModelInformation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigbrain.AIModelInformation)
}
AIModelInformation::AIModelInformation(const AIModelInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      outputs_(from.outputs_),
      update_inputs_(from.update_inputs_),
      update_outputs_(from.update_outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  updateable_ = from.updateable_;
  // @@protoc_insertion_point(copy_constructor:bigbrain.AIModelInformation)
}

void AIModelInformation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updateable_ = false;
}

AIModelInformation::~AIModelInformation() {
  // @@protoc_insertion_point(destructor:bigbrain.AIModelInformation)
  SharedDtor();
}

void AIModelInformation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AIModelInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AIModelInformation::descriptor() {
  ::protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AIModelInformation& AIModelInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bigbrain_2eproto::scc_info_AIModelInformation.base);
  return *internal_default_instance();
}


void AIModelInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:bigbrain.AIModelInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  outputs_.Clear();
  update_inputs_.Clear();
  update_outputs_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updateable_ = false;
  _internal_metadata_.Clear();
}

bool AIModelInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigbrain.AIModelInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelInformation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelInformation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelInformation.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bigbrain.IOType inputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_inputs(static_cast< ::bigbrain::IOType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_inputs(static_cast< ::bigbrain::IOType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bigbrain.IOType outputs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_outputs(static_cast< ::bigbrain::IOType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_outputs(static_cast< ::bigbrain::IOType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updateable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updateable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bigbrain.IOType update_inputs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_update_inputs(static_cast< ::bigbrain::IOType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_update_inputs(static_cast< ::bigbrain::IOType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bigbrain.IOType update_outputs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_update_outputs(static_cast< ::bigbrain::IOType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_update_outputs(static_cast< ::bigbrain::IOType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigbrain.AIModelInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigbrain.AIModelInformation)
  return false;
#undef DO_
}

void AIModelInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigbrain.AIModelInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // repeated .bigbrain.IOType inputs = 4;
  if (this->inputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_inputs_cached_byte_size_));
  }
  for (int i = 0, n = this->inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->inputs(i), output);
  }

  // repeated .bigbrain.IOType outputs = 5;
  if (this->outputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_outputs_cached_byte_size_));
  }
  for (int i = 0, n = this->outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->outputs(i), output);
  }

  // bool updateable = 6;
  if (this->updateable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->updateable(), output);
  }

  // repeated .bigbrain.IOType update_inputs = 7;
  if (this->update_inputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_update_inputs_cached_byte_size_));
  }
  for (int i = 0, n = this->update_inputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->update_inputs(i), output);
  }

  // repeated .bigbrain.IOType update_outputs = 8;
  if (this->update_outputs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_update_outputs_cached_byte_size_));
  }
  for (int i = 0, n = this->update_outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->update_outputs(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bigbrain.AIModelInformation)
}

::google::protobuf::uint8* AIModelInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bigbrain.AIModelInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelInformation.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // repeated .bigbrain.IOType inputs = 4;
  if (this->inputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _inputs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->inputs_, target);
  }

  // repeated .bigbrain.IOType outputs = 5;
  if (this->outputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _outputs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->outputs_, target);
  }

  // bool updateable = 6;
  if (this->updateable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->updateable(), target);
  }

  // repeated .bigbrain.IOType update_inputs = 7;
  if (this->update_inputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _update_inputs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->update_inputs_, target);
  }

  // repeated .bigbrain.IOType update_outputs = 8;
  if (this->update_outputs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _update_outputs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->update_outputs_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigbrain.AIModelInformation)
  return target;
}

size_t AIModelInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigbrain.AIModelInformation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bigbrain.IOType inputs = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->inputs_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->inputs(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inputs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .bigbrain.IOType outputs = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->outputs_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->outputs(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _outputs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .bigbrain.IOType update_inputs = 7;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->update_inputs_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->update_inputs(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _update_inputs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .bigbrain.IOType update_outputs = 8;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->update_outputs_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->update_outputs(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _update_outputs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // bool updateable = 6;
  if (this->updateable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AIModelInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigbrain.AIModelInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const AIModelInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AIModelInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigbrain.AIModelInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigbrain.AIModelInformation)
    MergeFrom(*source);
  }
}

void AIModelInformation::MergeFrom(const AIModelInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigbrain.AIModelInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  outputs_.MergeFrom(from.outputs_);
  update_inputs_.MergeFrom(from.update_inputs_);
  update_outputs_.MergeFrom(from.update_outputs_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.updateable() != 0) {
    set_updateable(from.updateable());
  }
}

void AIModelInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigbrain.AIModelInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AIModelInformation::CopyFrom(const AIModelInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigbrain.AIModelInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AIModelInformation::IsInitialized() const {
  return true;
}

void AIModelInformation::Swap(AIModelInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AIModelInformation::InternalSwap(AIModelInformation* other) {
  using std::swap;
  inputs_.InternalSwap(&other->inputs_);
  outputs_.InternalSwap(&other->outputs_);
  update_inputs_.InternalSwap(&other->update_inputs_);
  update_outputs_.InternalSwap(&other->update_outputs_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(updateable_, other->updateable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AIModelInformation::GetMetadata() const {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AIModelContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AIModelContainer::kHashFieldNumber;
const int AIModelContainer::kHashModelFieldNumber;
const int AIModelContainer::kHashStateFieldNumber;
const int AIModelContainer::kTimestampFieldNumber;
const int AIModelContainer::kModelFieldNumber;
const int AIModelContainer::kStateFieldNumber;
const int AIModelContainer::kOtherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AIModelContainer::AIModelContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bigbrain_2eproto::scc_info_AIModelContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigbrain.AIModelContainer)
}
AIModelContainer::AIModelContainer(const AIModelContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  hash_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_model().size() > 0) {
    hash_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_model_);
  }
  hash_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_state().size() > 0) {
    hash_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_state_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timestamp().size() > 0) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other().size() > 0) {
    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
  // @@protoc_insertion_point(copy_constructor:bigbrain.AIModelContainer)
}

void AIModelContainer::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AIModelContainer::~AIModelContainer() {
  // @@protoc_insertion_point(destructor:bigbrain.AIModelContainer)
  SharedDtor();
}

void AIModelContainer::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AIModelContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AIModelContainer::descriptor() {
  ::protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AIModelContainer& AIModelContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bigbrain_2eproto::scc_info_AIModelContainer.base);
  return *internal_default_instance();
}


void AIModelContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:bigbrain.AIModelContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AIModelContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigbrain.AIModelContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash().data(), static_cast<int>(this->hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelContainer.hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash_model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_model().data(), static_cast<int>(this->hash_model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelContainer.hash_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_state().data(), static_cast<int>(this->hash_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelContainer.hash_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bigbrain.AIModelContainer.timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes other = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_other()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigbrain.AIModelContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigbrain.AIModelContainer)
  return false;
#undef DO_
}

void AIModelContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigbrain.AIModelContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hash(), output);
  }

  // string hash_model = 2;
  if (this->hash_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_model().data(), static_cast<int>(this->hash_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hash_model(), output);
  }

  // string hash_state = 3;
  if (this->hash_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_state().data(), static_cast<int>(this->hash_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hash_state(), output);
  }

  // string timestamp = 4;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->timestamp(), output);
  }

  // bytes model = 5;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->model(), output);
  }

  // bytes state = 6;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->state(), output);
  }

  // bytes other = 7;
  if (this->other().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->other(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bigbrain.AIModelContainer)
}

::google::protobuf::uint8* AIModelContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bigbrain.AIModelContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash().data(), static_cast<int>(this->hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hash(), target);
  }

  // string hash_model = 2;
  if (this->hash_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_model().data(), static_cast<int>(this->hash_model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hash_model(), target);
  }

  // string hash_state = 3;
  if (this->hash_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_state().data(), static_cast<int>(this->hash_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.hash_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hash_state(), target);
  }

  // string timestamp = 4;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bigbrain.AIModelContainer.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timestamp(), target);
  }

  // bytes model = 5;
  if (this->model().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->model(), target);
  }

  // bytes state = 6;
  if (this->state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->state(), target);
  }

  // bytes other = 7;
  if (this->other().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->other(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigbrain.AIModelContainer)
  return target;
}

size_t AIModelContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigbrain.AIModelContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  // string hash_model = 2;
  if (this->hash_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_model());
  }

  // string hash_state = 3;
  if (this->hash_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_state());
  }

  // string timestamp = 4;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // bytes model = 5;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->model());
  }

  // bytes state = 6;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state());
  }

  // bytes other = 7;
  if (this->other().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->other());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AIModelContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigbrain.AIModelContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const AIModelContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AIModelContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigbrain.AIModelContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigbrain.AIModelContainer)
    MergeFrom(*source);
  }
}

void AIModelContainer::MergeFrom(const AIModelContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigbrain.AIModelContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.hash_model().size() > 0) {

    hash_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_model_);
  }
  if (from.hash_state().size() > 0) {

    hash_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_state_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.other().size() > 0) {

    other_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_);
  }
}

void AIModelContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigbrain.AIModelContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AIModelContainer::CopyFrom(const AIModelContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigbrain.AIModelContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AIModelContainer::IsInitialized() const {
  return true;
}

void AIModelContainer::Swap(AIModelContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AIModelContainer::InternalSwap(AIModelContainer* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_model_.Swap(&other->hash_model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  hash_state_.Swap(&other->hash_state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  other_.Swap(&other->other_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AIModelContainer::GetMetadata() const {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AICapabilityRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AICapabilityRequest::AICapabilityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bigbrain_2eproto::scc_info_AICapabilityRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigbrain.AICapabilityRequest)
}
AICapabilityRequest::AICapabilityRequest(const AICapabilityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bigbrain.AICapabilityRequest)
}

void AICapabilityRequest::SharedCtor() {
}

AICapabilityRequest::~AICapabilityRequest() {
  // @@protoc_insertion_point(destructor:bigbrain.AICapabilityRequest)
  SharedDtor();
}

void AICapabilityRequest::SharedDtor() {
}

void AICapabilityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AICapabilityRequest::descriptor() {
  ::protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AICapabilityRequest& AICapabilityRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bigbrain_2eproto::scc_info_AICapabilityRequest.base);
  return *internal_default_instance();
}


void AICapabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bigbrain.AICapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AICapabilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigbrain.AICapabilityRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:bigbrain.AICapabilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigbrain.AICapabilityRequest)
  return false;
#undef DO_
}

void AICapabilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigbrain.AICapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bigbrain.AICapabilityRequest)
}

::google::protobuf::uint8* AICapabilityRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bigbrain.AICapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigbrain.AICapabilityRequest)
  return target;
}

size_t AICapabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigbrain.AICapabilityRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AICapabilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigbrain.AICapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AICapabilityRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AICapabilityRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigbrain.AICapabilityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigbrain.AICapabilityRequest)
    MergeFrom(*source);
  }
}

void AICapabilityRequest::MergeFrom(const AICapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigbrain.AICapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AICapabilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigbrain.AICapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AICapabilityRequest::CopyFrom(const AICapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigbrain.AICapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AICapabilityRequest::IsInitialized() const {
  return true;
}

void AICapabilityRequest::Swap(AICapabilityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AICapabilityRequest::InternalSwap(AICapabilityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AICapabilityRequest::GetMetadata() const {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AICapabilityResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AICapabilityResponse::kModelsInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AICapabilityResponse::AICapabilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bigbrain_2eproto::scc_info_AICapabilityResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bigbrain.AICapabilityResponse)
}
AICapabilityResponse::AICapabilityResponse(const AICapabilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      models_information_(from.models_information_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bigbrain.AICapabilityResponse)
}

void AICapabilityResponse::SharedCtor() {
}

AICapabilityResponse::~AICapabilityResponse() {
  // @@protoc_insertion_point(destructor:bigbrain.AICapabilityResponse)
  SharedDtor();
}

void AICapabilityResponse::SharedDtor() {
}

void AICapabilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AICapabilityResponse::descriptor() {
  ::protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AICapabilityResponse& AICapabilityResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bigbrain_2eproto::scc_info_AICapabilityResponse.base);
  return *internal_default_instance();
}


void AICapabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bigbrain.AICapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  models_information_.Clear();
  _internal_metadata_.Clear();
}

bool AICapabilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bigbrain.AICapabilityResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bigbrain.AIModelInformation models_information = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_models_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bigbrain.AICapabilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bigbrain.AICapabilityResponse)
  return false;
#undef DO_
}

void AICapabilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bigbrain.AICapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigbrain.AIModelInformation models_information = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->models_information_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->models_information(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bigbrain.AICapabilityResponse)
}

::google::protobuf::uint8* AICapabilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bigbrain.AICapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bigbrain.AIModelInformation models_information = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->models_information_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->models_information(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bigbrain.AICapabilityResponse)
  return target;
}

size_t AICapabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bigbrain.AICapabilityResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bigbrain.AIModelInformation models_information = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->models_information_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->models_information(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AICapabilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bigbrain.AICapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AICapabilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AICapabilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bigbrain.AICapabilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bigbrain.AICapabilityResponse)
    MergeFrom(*source);
  }
}

void AICapabilityResponse::MergeFrom(const AICapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bigbrain.AICapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  models_information_.MergeFrom(from.models_information_);
}

void AICapabilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bigbrain.AICapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AICapabilityResponse::CopyFrom(const AICapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bigbrain.AICapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AICapabilityResponse::IsInitialized() const {
  return true;
}

void AICapabilityResponse::Swap(AICapabilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AICapabilityResponse::InternalSwap(AICapabilityResponse* other) {
  using std::swap;
  CastToBase(&models_information_)->InternalSwap(CastToBase(&other->models_information_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AICapabilityResponse::GetMetadata() const {
  protobuf_bigbrain_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bigbrain_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bigbrain
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bigbrain::AICapability* Arena::CreateMaybeMessage< ::bigbrain::AICapability >(Arena* arena) {
  return Arena::CreateInternal< ::bigbrain::AICapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bigbrain::AIModelInformation* Arena::CreateMaybeMessage< ::bigbrain::AIModelInformation >(Arena* arena) {
  return Arena::CreateInternal< ::bigbrain::AIModelInformation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bigbrain::AIModelContainer* Arena::CreateMaybeMessage< ::bigbrain::AIModelContainer >(Arena* arena) {
  return Arena::CreateInternal< ::bigbrain::AIModelContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bigbrain::AICapabilityRequest* Arena::CreateMaybeMessage< ::bigbrain::AICapabilityRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bigbrain::AICapabilityRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bigbrain::AICapabilityResponse* Arena::CreateMaybeMessage< ::bigbrain::AICapabilityResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bigbrain::AICapabilityResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
